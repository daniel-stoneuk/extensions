<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="ToothFairy Terminology">
    <!-- #mark ToothFairy Suite -->
    <suite name="ToothFairy Suite" code="mtTF">
       	<!-- #mark ToothFairy Suite / device -->        
        <class name="device" code="BTdv" description="A Bluetooth device." plural="devices">
            <cocoa class="ToothFairy.DeviceSetting"/>
            <property name="name" code="pnam" description="The name of the device throughout macOS." type="text" access="r">
                <cocoa key="scriptingName"/>
            </property>
            <property name="id" code="ID  " description="The ToothFairy-specific identifier." type="integer" access="r">
                <cocoa key="scriptingID"/>
            </property>
            <property name="address" code="Addr" description="" type="text" access="r">
                <cocoa key="scriptingAddress"/>
            </property>
            <property name="connected" code="Conn" description="Is the device connected or disconnected?" type="boolean" access="rw">
                <cocoa key="scriptingIsConnected"/>
            </property>
            <property name="connection script" code="ScpC" description="" type="text" access="r">
                <cocoa key="scriptingConnectionScript"/>
            </property>
            <property name="disconnection script" code="ScpD" description="" type="text" access="r">
                <cocoa key="scriptingDisconnectionScript"/>
            </property>
            <property name="icon name" code="IcoN" description="The icon selected for this device." type="text" access="r">
                <cocoa key="scriptingIconName"/>
            </property>
            <property name="icon data" code="Icon" description="The icon, showing the current connection status and battery level (if applicable)." type="any" access="r">
                <cocoa key="scriptingIconData"/>
            </property>
            <property name="disconnected icon data" code="IcoD" description="" type="any" access="r">
                <cocoa key="scriptingDisconnectedIconData"/>
            </property>
            <property name="connected icon data" code="IcoC" description="" type="any" access="r">
                <cocoa key="scriptingConnectedIconData"/>
            </property>
            <property name="battery level" code="Batt" description="The percentage of battery charge." type="integer" access="r">
                <cocoa key="scriptingBatteryLevel"/>
            </property>
            <property name="battery level string" code="BatS" description="" type="text" access="r">
                <cocoa key="scriptingBatteryLevelString"/>
            </property>
            <property name="status" code="Stat" description="" type="text" access="r">
                <cocoa key="scriptingStatus"/>
            </property>
        </class>
       	<!-- #mark ToothFairy Suite / Commands -->
    </suite>
    <!-- #mark Standard Suite -->
    <suite name="Standard Suite" code="core" description="Common classes and commands for all applications.">
        <cocoa name="NSCoreSuite"/>
        <enumeration name="printing error handling" code="enum">
            <enumerator name="standard" code="lwst" description="Standard PostScript error handling"/>
            <enumerator name="detailed" code="lwdt" description="print a detailed report of PostScript errors"/>
        </enumeration>
        <value-type name="missing value" code="msng">
          <cocoa class="NSNull"/>
        </value-type>
        <record-type name="print settings" code="pset">
            <property name="copies" code="lwcp" description="the number of copies of a document to be printed" type="integer">
                <cocoa key="NSCopies"/>
            </property>
            <property name="collating" code="lwcl" description="Should printed copies be collated?" type="boolean">
                <cocoa key="NSMustCollate"/>
            </property>
            <property name="starting page" code="lwfp" description="the first page of the document to be printed" type="integer">
                <cocoa key="NSFirstPage"/>
            </property>
            <property name="ending page" code="lwlp" description="the last page of the document to be printed" type="integer">
                <cocoa key="NSLastPage"/>
            </property>
            <property name="pages across" code="lwla" description="number of logical pages laid across a physical page" type="integer">
                <cocoa key="NSPagesAcross"/>
            </property>
            <property name="pages down" code="lwld" description="number of logical pages laid out down a physical page" type="integer">
                <cocoa key="NSPagesDown"/>
            </property>
            <property name="error handling" code="lweh" description="how errors are handled" type="printing error handling">
                <cocoa key="NSDetailedErrorReporting"/>
            </property>
            <property name="fax number" code="faxn" description="for fax number" type="text">
                <cocoa key="NSFaxNumber"/>
            </property>
            <property name="target printer" code="trpr" description="for target printer" type="text">
                <cocoa key="NSPrinterName"/>
            </property>
        </record-type>
        <!-- #mark Standard Suite / application -->
        <class name="application" code="capp" description="The application&apos;s top-level scripting object.">
            <cocoa class="NSApplication"/>
            <element type="document">
                <cocoa key="orderedDocuments"/>
            </element>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            <property name="name" code="pnam" description="The name of the application." type="text" access="r"/>
            <property name="frontmost" code="pisf" description="Is this the frontmost (active) application?" type="boolean" access="r">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" description="The version of the application." type="text" access="r"/>
            <responds-to name="open" command="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to name="print" command="print">
                <cocoa method="handlePrintScriptCommand:"/>
            </responds-to>
            <responds-to name="quit" command="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>

            <element type="device" access="r">
                <cocoa key="scriptingDevices"/>
            </element>
        </class>
        <!-- #mark Standard Suite / document -->
        <class name="document" code="docu" description="A document.">
            <cocoa class="NSDocument"/>
            <property name="name" code="pnam" description="The document&apos;s name." type="text" access="r">
                <cocoa key="displayName"/>
            </property>
            <property name="modified" code="imod" description="Has the document been modified since the last save?" type="boolean" access="r">
                <cocoa key="isDocumentEdited"/>
            </property>
            <property name="file" code="file" description="The document&apos;s location on disk." type="file" access="r">
                <cocoa key="fileURL"/>
            </property>
            <responds-to name="close" command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to name="print" command="print">
                <cocoa method="handlePrintScriptCommand:"/>
            </responds-to>
            <responds-to name="save" command="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>
    	<!-- #mark Standard Suite / window -->
        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" description="The full title of the window." type="text" access="r">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " description="The unique identifier of the window." type="integer" access="r">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" description="The index of the window, ordered front to back." type="integer">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" description="The bounding rectangle of the window." type="rectangle">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" description="Whether the window has a close box." type="boolean" access="r">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="minimizable" code="ismn" description="Whether the window can be minimized." type="boolean" access="r">
                <cocoa key="isMiniaturizable"/>
                <synonym name="miniaturizable"/>
            </property>
            <property name="minimized" code="pmnd" description="Whether the window is currently minimized." type="boolean">
                <cocoa key="isMiniaturized"/>
                <synonym name="miniaturized"/>
            </property>
            <property name="resizable" code="prsz" description="Whether the window can be resized." type="boolean" access="r">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" description="Whether the window is currently visible." type="boolean">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" description="Whether the window can be zoomed." type="boolean" access="r">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" description="Whether the window is currently zoomed." type="boolean">
                <cocoa key="isZoomed"/>
            </property>
            <property name="document" code="docu" description="The document whose contents are being displayed in the window." type="document" access="r"/>
            <responds-to name="close" command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
            <responds-to name="print" command="print">
                <cocoa method="handlePrintScriptCommand:"/>
            </responds-to>
            <responds-to name="save" command="save">
                <cocoa method="handleSaveScriptCommand:"/>
            </responds-to>
        </class>
       	<!-- #mark Standard Suite / Commands -->
        <command name="open" code="aevtodoc" description="Open a document.">
            <direct-parameter description="the file(s) to open">
                <type type="file" list="yes"/>
            </direct-parameter>
        </command>
        <command name="close" code="coreclos" description="Close a document.">
            <cocoa class="NSCloseCommand"/>
            <direct-parameter description="the document(s) or window(s) to close." type="specifier"/>
        </command>
        <command name="save" code="coresave" description="Save a document.">
            <direct-parameter description="The document(s) or window(s) to save." type="specifier"/>
        </command>
        <command name="print" code="aevtpdoc" description="Print a document.">
            <parameter name="with properties" code="prdt" description="The print settings to use." type="print settings" optional="yes">
                <cocoa key="PrintSettings"/>
            </parameter>
            <parameter name="print dialog" code="pdlg" description="Should the application show the print dialog?" type="boolean" optional="yes">
                <cocoa key="ShowPrintDialog"/>
            </parameter>
        </command>
        <command name="quit" code="aevtquit" description="Quit the application.">
            <cocoa class="NSQuitCommand"/>
        </command>
        <command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <direct-parameter description="the object whose elements are to be counted" type="specifier"/>
            <parameter name="each" code="kocl" description="The class of objects to be counted." type="type" optional="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result description="the number of elements" type="integer"/>
        </command>
        <command name="delete" code="coredelo" description="Delete an object.">
            <cocoa class="NSDeleteCommand"/>
            <direct-parameter description="the object to delete" type="specifier"/>
        </command>
        <command name="duplicate" code="coreclon" description="Copy object(s) and put the copies at a new location.">
            <cocoa class="NSCloneCommand"/>
            <direct-parameter description="the object(s) to duplicate" type="specifier"/>
            <parameter name="to" code="insh" description="The location for the new object(s)." type="location specifier" optional="yes">
                <cocoa key="ToLocation"/>
            </parameter>
            <parameter name="with properties" code="prdt" description="Properties to be set in the new duplicated object(s)." type="record" optional="yes">
                <cocoa key="WithProperties"/>
            </parameter>
            <result description="to the duplicated object(s)" type="specifier"/>
        </command>
        <command name="exists" code="coredoex" description="Verify if an object exists.">
            <cocoa class="NSExistsCommand"/>
            <direct-parameter description="the object in question" type="any"/>
            <result description="true if it exists, false if not" type="boolean"/>
        </command>
        <command name="make" code="corecrel" description="Make a new object.">
            <cocoa class="NSCreateCommand"/>
            <parameter name="new" code="kocl" description="The class of the new object." type="type">
                <cocoa key="ObjectClass"/>
            </parameter>
            <parameter name="at" code="insh" description="The location at which to insert the object." type="location specifier" optional="yes">
                <cocoa key="Location"/>
            </parameter>
            <parameter name="with contents" code="data" description="The initial contents of the object." type="any" optional="yes">
                <cocoa key="ObjectData"/>
            </parameter>
            <parameter name="with properties" code="prdt" description="The initial values for properties of the object." type="record" optional="yes">
                <cocoa key="KeyDictionary"/>
            </parameter>
            <result description="to the new object" type="specifier"/>
        </command>
        <command name="move" code="coremove" description="Move object(s) to a new location.">
            <cocoa class="NSMoveCommand"/>
            <direct-parameter description="the object(s) to move" type="specifier"/>
            <parameter name="to" code="insh" description="The new location for the object(s)." type="location specifier">
                <cocoa key="ToLocation"/>
            </parameter>
            <result description="to the moved object(s)" type="specifier"/>
        </command>
    </suite>
    <!-- #mark Internet Suite -->
    <suite name="Internet Suite" code="gurl">
        <command name="get url" code="GURLGURL" description="Open a x-toothfairy:// URL">
            <cocoa name="GetURL" class="MJTURLHandlerCommand"/>
            <direct-parameter description="the URL to open" type="text"/>
        </command>
    </suite>
</dictionary>
